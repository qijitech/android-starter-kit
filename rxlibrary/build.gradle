repositories {
  jcenter()
  maven { url "https://clojars.org/repo/" }
  maven { url "https://jitpack.io" }
  maven { url "https://plugins.gradle.org/m2/" }
}

buildscript {
  repositories {
    jcenter()
    maven { url "https://clojars.org/repo/" }
    maven { url "https://jitpack.io" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.github.dcendents:android-maven-gradle-plugin:1.5"
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
  }
}

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jakewharton.butterknife'

//project.archivesBaseName = 'starter'
//group='tech.qiji'

android {
  compileSdkVersion rootProject.ext.android.compileSdkVersion
  buildToolsVersion rootProject.ext.android.buildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.android.minSdkVersion
    targetSdkVersion rootProject.ext.android.targetSdkVersion
    multiDexEnabled true
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    // if true, only report errors
    ignoreWarnings true
    abortOnError false
  }

  compileOptions {
    sourceCompatibility 1.8
    targetCompatibility 1.8
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  testCompile 'junit:junit:4.12'

  compile deps.appcompatV7
  compile deps.cardviewV7

  // Recycler View
  compile deps.recyclerviewV7
  compile deps.paginate

  compile deps.converterJackson

  // Square
  compile deps.retrofit
  compile deps.okhttp
  compile deps.loggingInterceptor

  // rx
  compile deps.rxandroid
  // Because RxAndroid releases are few and far between, it is recommended you also
  // explicitly depend on RxJava's latest version for bug fixes and new features.
  compile deps.rxjava


  compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'

  compile 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'
  // If you want pre-written Activities and Fragments you can subclass as providers
  compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'

  compile 'com.orhanobut:logger:1.13'

  compile 'frankiesardo:icepick:3.2.0'
  provided 'frankiesardo:icepick-processor:3.2.0'

  compile 'com.android.support:multidex:1.0.1'

  compile deps.butterknife
  annotationProcessor 'com.jakewharton:butterknife-compiler:' + rootProject.ext.depsVersion.butterknifeVersion

  compile project(':support-ui-core')
  compile project(':support-ui-adapters')
  compile project(':support-ui-cells')
  compile project(':support-ui-widget')
}

if (project.hasProperty('POM_DEVELOPER_ID')) {
  apply from: '../.buildscript/deploy.gradle'
}